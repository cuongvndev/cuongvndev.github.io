<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on VC Stack - Going to the moon üåë</title>
    <link>https://vcstack.github.io/vi/categories/java/</link>
    <description>Recent content in Java on VC Stack - Going to the moon üåë</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi</language>
    <lastBuildDate>Tue, 24 Sep 2024 12:54:25 +0700</lastBuildDate><atom:link href="https://vcstack.github.io/vi/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng OpenCV trong Java</title>
      <link>https://vcstack.github.io/vi/post/java/su-dung-opencv-de-compare-image/</link>
      <pubDate>Tue, 24 Sep 2024 12:54:25 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/su-dung-opencv-de-compare-image/</guid>
      <description>S·ª≠ d·ª•ng OpenCV ƒë·ªÉ compare 2 file image
1. C√†i ƒë·∫∑t th∆∞ vi·ªán S·ª≠ d·ª•ng OpenPnP ƒë√£ ƒë√≥ng g√≥i OpenCV k√®m native library
Th√™m dependency
&amp;lt;!-- https://mvnrepository.com/artifact/org.openpnp/opencv --&amp;gt;&amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;org.openpnp&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;opencv&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;4.9.0-0&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt; or n·∫øu s·ª≠ d·ª•ng Gradle
// https://mvnrepository.com/artifact/org.openpnp/opencv implementation group: &amp;#39;org.openpnp&amp;#39;, name: &amp;#39;opencv&amp;#39;, version: &amp;#39;4.9.0-0&amp;#39; 2. Code demo S·ª≠ d·ª•ng OpenCV.loadShared(); ƒë·ªÉ load native library thay v√¨ s·ª≠ d·ª•ng System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
import nu.pattern.OpenCV; import org.opencv.core.Core; import org.opencv.core.Mat; import org.opencv.core.MatOfPoint; import org.</description>
    </item>
    
    <item>
      <title>Async REST API Using Spring Boot</title>
      <link>https://vcstack.github.io/vi/post/java/async-rest-api-spring-boot/</link>
      <pubDate>Fri, 03 May 2024 10:41:48 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/async-rest-api-spring-boot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>T·∫°o m√£ QR code v·ªõi Zxing</title>
      <link>https://vcstack.github.io/vi/post/java/tao-qr-code-voi-zxing/</link>
      <pubDate>Tue, 26 Sep 2023 14:44:02 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/tao-qr-code-voi-zxing/</guid>
      <description>T·∫°o m√£ QR code v·ªõi Zxing
C√†i ƒë·∫∑t dependency:
implementation group: &amp;#39;com.google.zxing&amp;#39;, name: &amp;#39;core&amp;#39;, version: &amp;#39;3.5.2&amp;#39;implementation group: &amp;#39;com.google.zxing&amp;#39;, name: &amp;#39;javase&amp;#39;, version: &amp;#39;3.5.2&amp;#39; code ƒë·ªÉ t·∫°o m√£ QR:
String data= &amp;#34;T·∫°o m√£ QR code&amp;#34;;QRCodeWriter qrCodeWriter = new QRCodeWriter();BitMatrix matrix = qrCodeWriter.encode(data, BarcodeFormat.QR_CODE, 200, 200);String outputFile = &amp;#34;D:/demo/test.png&amp;#34;;Path path = FileSystems.getDefault().getPath(outputFile);MatrixToImageWriter.writeToPath(matrix, &amp;#34;PNG&amp;#34;, path); </description>
    </item>
    
    <item>
      <title>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Microservice, Eureka v√† Zuul Gateway - Ph·∫ßn 3</title>
      <link>https://vcstack.github.io/vi/post/java/microservice-authentication-jwt-token-and-spring-cloud-configuaration-part-3/</link>
      <pubDate>Mon, 14 Aug 2023 15:33:23 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/microservice-authentication-jwt-token-and-spring-cloud-configuaration-part-3/</guid>
      <description>&lt;p&gt;Trong ph·∫ßn n√†y ch√∫ng ta s·∫Ω c√πng t√¨m hi·ªÉu v·ªÅ Spring Cloud Configuaration.&lt;/p&gt;
&lt;p&gt;Spring Cloud Configuration l√† m·ªôt module trong h·ªá sinh th√°i Spring Cloud, cung c·∫•p c√°c c√¥ng c·ª• ƒë·ªÉ x√¢y d·ª±ng c√°c h·ªá th·ªëng ph√¢n t√°n v√† ·ª©ng d·ª•ng d·ªãch v·ª• nh·ªè. Spring Cloud Configuration t·∫≠p trung c·ª• th·ªÉ v√†o vi·ªác qu·∫£n l√Ω c·∫•u h√¨nh c·ªßa c√°c ·ª©ng d·ª•ng trong m·ªôt c√°ch t·∫≠p trung v√† linh ho·∫°t.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Microservice, Eureka v√† Zuul Gateway - Ph·∫ßn 2</title>
      <link>https://vcstack.github.io/vi/post/java/microservice-authentication-jwt-token-and-spring-cloud-configuaration/</link>
      <pubDate>Fri, 11 Aug 2023 09:25:25 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/microservice-authentication-jwt-token-and-spring-cloud-configuaration/</guid>
      <description>&lt;p&gt;·ªû b√†i tr∆∞·ªõc ch√∫ng ta ƒë√£ d·ª±ng ƒë∆∞·ª£c m·ªôt h·ªá th·ªëng microservice ƒë∆°n gi·∫£n v·ªõi User service, Eureka server v√† Zuul gateway.
Trong b√†i vi·∫øt n√†y ch√∫ng ta s·∫Ω c√πng t√¨m hi·ªÉu v·ªÅ &lt;strong&gt;JWT&lt;/strong&gt; v√† c√°ch ƒë·ªÉ &lt;strong&gt;x√°c th·ª±c v√† b·∫£o m·∫≠t&lt;/strong&gt; trong h·ªá th·ªëng &lt;strong&gt;Microservice&lt;/strong&gt; b·∫±ng JWT.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Microservice, Eureka v√† Zuul Gateway - Ph·∫ßn 1</title>
      <link>https://vcstack.github.io/vi/post/java/microservice-with-spring-boot-eureka-and-zuul-gateway/</link>
      <pubDate>Thu, 10 Aug 2023 11:18:56 +0700</pubDate>
      
      <guid>https://vcstack.github.io/vi/post/java/microservice-with-spring-boot-eureka-and-zuul-gateway/</guid>
      <description>&lt;p&gt;B√†i vi·∫øt n√†y cung c·∫•p m·ªôt h∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ vi·ªác tri·ªÉn khai v√† s·ª≠ d·ª•ng ki·∫øn tr√∫c &lt;strong&gt;Microservice&lt;/strong&gt; k·∫øt h·ª£p v·ªõi c√°c c√¥ng c·ª• &lt;strong&gt;Eureka&lt;/strong&gt; v√† Zuul &lt;strong&gt;Gateway&lt;/strong&gt;. ƒê√¢y l√† nh·ªØng b∆∞·ªõc c∆° b·∫£n ƒë·ªÉ x√¢y d·ª±ng m·ªôt h·ªá th·ªëng ph√¢n t√°n linh ho·∫°t v√† c√≥ kh·∫£ nƒÉng m·ªü r·ªông.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
